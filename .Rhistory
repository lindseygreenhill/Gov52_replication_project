# creating a vector of labels for the summary table
labs <- c("Presidential Disaster Declarations", "Actual Disasters", "Electoral Votes",
"Competitiveness",
"Per Capita Personal Income (logged)",
"InsuranceDollars (logged)",
"Congressional Delegation Same party as the President",
"Governor Same Party as the President")
# using a for loop to do the rest of the summary table
for(i in 2:8){
mean <- mean(data_sum[,i])
sd <- sd(data_sum[,i])
min <- min(data_sum[,i])
max <- max(data_sum[,i])
vec <- tibble(variable = labs[i], Mean = mean,
Std_Dev = sd,
Min = min,
Max = max)
sum_tab <- rbind(sum_tab, vec)
}
# turning summary table into gt object
tbl_1 <- sum_tab %>%
gt() %>%
fmt_number(columns = 2:5,
decimals = 1)
##Table 2 Model of Presidential Disaster Declarations, Pooled Model (Column 1)
##and Split Sample Model (Columns 2 and 3) (p. 1147)
##Col 1 (full)
reg<-glm(fema.dis ~ priv.dis + INSURADJ.L + log(ppinc.adj) + ev + comp + reagan1 + reagan2 + bush + clinton1 + wbush + p2 + p3 + p4 + cong.pres + pres.party + as.factor(state), family = poisson, data=data)
##Col 2 (pre-Stafford)
reg1<-glm(fema.dis ~ priv.dis + INSURADJ.L + log(ppinc.adj) + ev + comp + reagan1 + p2 + p3 + p4 + cong.pres + pres.party + as.factor(state), family = poisson, data=data[data$year < 1989,])
##Col 3 (post-stafford)
reg2 <- glm(fema.dis ~ priv.dis + INSURADJ.L + log(ppinc.adj) + ev + comp + bush + clinton1 + wbush + p2 + p3 + p4 + cong.pres + pres.party + as.factor(state), family = poisson, data=data[data$year>1988,])
# stargazer table
tbl_2 <- stargazer(reg, reg1, reg2,
title = "Model of Presidential Disaster Declarations,\n Pooled Model (Column 1)\nand Split Sample Model (Columns 2 and 3)",
align = TRUE,
type = "latex",
omit = "state",
order = c("comp", "priv.dis", "INSURADJ.L",
"ppinc.adj",
"ev", "p2", "p3", "p4",
"cong.pres", "pres.party",
"reagan1", "reagan2",
"bush", "clinton1", "wbush"),
covariate.labels = c("Competitiveness", "Actual Disasters",
"Insurance cost (logged)", "Per capita income", "Electoral Votes", "year 2 of admin",
"year 3 of admin", "year 4 of admin", "Congressional partisanship", "President / Governor same party",
"Reagan (term 1)", "Reagan (term 2)", "GHW Bush",
"W Bush", "Clinton (term 1)", "Intercept"),
digits = 2,
column.labels = c("full", "pre-Stafford", "post-Stafford"),
keep.stat = c("n", "aic", "bic", "ll"))
data_post <- data %>%
filter(year  > 1988)
# creating predicted responses
data_post$phat <- predict(reg2, type = "response")
# this isn't quite right/the same but I don't know why
ggplot(data_post, aes(x = comp, y = fema.dis)) +
geom_smooth(method = "glm",
method.args = list(family = "poisson")) +
theme_classic()
plot_model(reg2, type = "eff",
terms = "comp")
plot_model(reg2, type = "eff",
terms = "comp",
ci.lvl = NA)
plot_model(reg2, type = "eff",
terms = "comp",
ci.lvl = .9)
plot_model(reg2, type = "eff",
terms = "comp",
ci.lvl = .95)
plot_model(reg2, type = "eff",
terms = "comp",
ci.lvl = .95,
axis.lim = c(30,45))
plot_model(reg2, type = "eff",
terms = "comp",
ci.lvl = .95,
axis.lim = c(0,1.5))
plot_model(reg2, type = "eff",
terms = "comp",
ci.lvl = .95,
axis.lim = list(c(0,1.5), c(25,40)))
plot_model(reg2, type = "eff",
terms = "comp",
ci.lvl = .95,
axis.lim = list(c(25,40), c(0,1.5)))
plot_model(reg2, type = "eff",
terms = "comp",
ci.lvl = .95,
axis.lim = list(c(25,50), c(0,1.5)))
plot_model(reg2, type = "eff",
terms = "comp",
ci.lvl = NA,
axis.lim = list(c(25,50), c(0,1.5)))
plot_model(reg2, type = "eff",
terms = "comp",
ci.lvl = NA,
axis.lim = list(c(25,50), c(0,1.5))) +
theme_classic()
plot_model(reg2, type = "eff",
terms = "comp",
ci.lvl = NA,
axis.lim = list(c(25,50), c(0,1.5))) +
theme_classic() +
labs(title = "Effect of Competitiveness  on Number\n
of  Disaster Declarattions, Post-Stafford Act Only")
plot_model(reg2, type = "eff",
terms = "comp",
ci.lvl = NA,
axis.lim = list(c(25,50), c(0,1.5))) +
theme_classic() +
labs(title = "Figure 1: Effect of Competitiveness  on Number\n of  Disaster Declarattions, Post-Stafford Act Only")
fig_1 <- plot_model(reg2, type = "eff",
terms = "comp",
ci.lvl = NA,
axis.lim = list(c(25,50), c(0,1.5))) +
theme_classic() +
labs(title = "Figure 1: Effect of Competitiveness  on Number\n of  Disaster Declarattions, Post-Stafford Act Only")
fig_1
fig_1 <- plot_model(reg2, type = "eff",
terms = "comp",
ci.lvl = NA,
axis.lim = list(c(25,50), c(0,1.5))) +
theme_classic() +
labs(title = "Figure 1: Effect of Competitiveness  on Number\n of  Disaster Declarattions, Post-Stafford Act Only",
x = "Competitiveness",
y = "Expected Number of Disaster Declarations")
fig_1 <- plot_model(reg2, type = "eff",
terms = "comp",
ci.lvl = NA,
axis.lim = list(c(25,50), c(0,1.5))) +
theme_classic() +
labs(title = "Figure 1: Effect of Competitiveness  on Number\n of  Disaster Declarattions, Post-Stafford Act Only",
x = "Competitiveness",
y = "Expected Number of Disaster Declarations")
fig_1
data %>%
ggplot(aes(x = comp)) +
geom_histogram()
data <- data %>%
mutate(comp_level = if_else(comp > median(comp), "highly_competitive",
"not competitive"))
data
data <- data %>%
mutate(comp_level = if_else(comp > median(comp), "highly_competitive",
"not_competitive"))
data
data_post$phat
ggplot(data_post, aes(x = comp, y = fema.dis)) +
geom_smooth(method = "glm",
method.args = list(family = "poisson")) +
theme_classic()
# reading in the two data frames the data is the almost 1,000 presidential
# disasters declared from 1981 to 2004. Unit is number of disasters in each
# state per year. So for 24 years and 50 states there are a total of 1,200 observations
data <- read.csv("political_disaster_replication_t2.csv",
stringsAsFactors = FALSE)
data <- data  %>%
mutate(ppinc.adj.log = log(ppinc.adj))
data1<-read.csv("political_disaster_replication_t3.csv")
# giving data attribute labels
# classifying states as either high or low competition based off of median
data <- data %>%
mutate(comp_level = if_else(comp > median(comp), "highly_competitive",
"not_competitive"))
# table 1 is summary statistics of presidential disaster declarations, actual
# disasters, electoral votes, competitiveness,  per  capita personal income
# (logged),insurance dollars (logged), congressional delegation sameparty as
# president, and governor same party as  the president
# creating initial  summary table to base for loop off of
sum_tab <- tibble(variable = "Presidential Disaster Declaration", Mean = mean(data$fema.dis),
Std_Dev = sd(data$fema.dis),
Min = min(data$fema.dis),
Max = max(data$fema.dis))
# just selecting variables I'm creating summaries of
data_sum <- data %>%
select(fema.dis, priv.dis, ev, comp, ppinc.adj.log, INSURADJ.L, cong.pres, pres.party)
# creating a vector of labels for the summary table
labs <- c("Presidential Disaster Declarations", "Actual Disasters", "Electoral Votes",
"Competitiveness",
"Per Capita Personal Income (logged)",
"InsuranceDollars (logged)",
"Congressional Delegation Same party as the President",
"Governor Same Party as the President")
# using a for loop to do the rest of the summary table
for(i in 2:8){
mean <- mean(data_sum[,i])
sd <- sd(data_sum[,i])
min <- min(data_sum[,i])
max <- max(data_sum[,i])
vec <- tibble(variable = labs[i], Mean = mean,
Std_Dev = sd,
Min = min,
Max = max)
sum_tab <- rbind(sum_tab, vec)
}
# turning summary table into gt object
tbl_1 <- sum_tab %>%
gt() %>%
fmt_number(columns = 2:5,
decimals = 1)
##Table 2 Model of Presidential Disaster Declarations, Pooled Model (Column 1)
##and Split Sample Model (Columns 2 and 3) (p. 1147)
##Col 1 (full)
reg<-glm(fema.dis ~ priv.dis + INSURADJ.L + log(ppinc.adj) + ev + comp + reagan1 + reagan2 + bush + clinton1 + wbush + p2 + p3 + p4 + cong.pres + pres.party + as.factor(state), family = poisson, data=data)
##Col 2 (pre-Stafford)
reg1<-glm(fema.dis ~ priv.dis + INSURADJ.L + log(ppinc.adj) + ev + comp + reagan1 + p2 + p3 + p4 + cong.pres + pres.party + as.factor(state), family = poisson, data=data[data$year < 1989,])
##Col 3 (post-stafford)
reg2 <- glm(fema.dis ~ priv.dis + INSURADJ.L + log(ppinc.adj) + ev + comp + bush + clinton1 + wbush + p2 + p3 + p4 + cong.pres + pres.party + as.factor(state), family = poisson, data=data[data$year>1988,])
# stargazer table
tbl_2 <- stargazer(reg, reg1, reg2,
title = "Model of Presidential Disaster Declarations,\n Pooled Model (Column 1)\nand Split Sample Model (Columns 2 and 3)",
align = TRUE,
type = "latex",
omit = "state",
order = c("comp", "priv.dis", "INSURADJ.L",
"ppinc.adj",
"ev", "p2", "p3", "p4",
"cong.pres", "pres.party",
"reagan1", "reagan2",
"bush", "clinton1", "wbush"),
covariate.labels = c("Competitiveness", "Actual Disasters",
"Insurance cost (logged)", "Per capita income", "Electoral Votes", "year 2 of admin",
"year 3 of admin", "year 4 of admin", "Congressional partisanship", "President / Governor same party",
"Reagan (term 1)", "Reagan (term 2)", "GHW Bush",
"W Bush", "Clinton (term 1)", "Intercept"),
digits = 2,
column.labels = c("full", "pre-Stafford", "post-Stafford"),
keep.stat = c("n", "aic", "bic", "ll"))
data_post <- data %>%
filter(year  > 1988)
# creating predicted responses
data_post$phat <- predict(reg2, type = "response")
# this isn't quite right/the same but I don't know why
ggplot(data_post, aes(x = comp, y = fema.dis)) +
geom_smooth(method = "glm",
method.args = list(family = "poisson")) +
theme_classic()
fig_1 <- plot_model(reg2, type = "eff",
terms = "comp",
ci.lvl = NA,
axis.lim = list(c(25,50), c(0,1.5))) +
theme_classic() +
labs(title = "Figure 1: Effect of Competitiveness  on Number\n of  Disaster Declarattions, Post-Stafford Act Only",
x = "Competitiveness",
y = "Expected Number of Disaster Declarations")
data_pre <- data_post <- data %>%
filter(year  < 1989)
data_pre$phat <- predict(reg1, type = "response")
data_pre
data_pre %>%
ggplot(aes(x = phat, fill = comp_level))  +
geom_histogram()
data_pre %>%
ggplot(aes(x = phat, fill = comp_level))  +
geom_histogram(binwidth = .1)
data_pre %>%
ggplot(aes(x = phat, fill = comp_level))  +
geom_histogram(binwidth = .05)
data_pre %>%
ggplot(aes(x = phat, fill = comp_level))  +
geom_histogram(binwidth = .025)
data_pre %>%
ggplot(aes(x = phat, fill = comp_level))  +
geom_histogram(binwidth = .01)
data_pre %>%
ggplot(aes(x = phat, fill = comp_level))  +
geom_histogram(binwidth = .05, position = "identity")
data_pre %>%
ggplot(aes(x = phat, fill = comp_level))  +
geom_histogram(alpha = .5, binwidth = .05, position = "identity")
data_pre %>%
ggplot(aes(x = phat, fill = comp_level))  +
geom_histogram(aes(y = ..density..),
alpha = .5, binwidth = .05, position = "identity")
data_post %>%
ggplot(aes(x = phat, fill = comp_level))  +
geom_histogram(aes(y = ..density..),
alpha = .5, binwidth = .05, position = "identity")
data_post$phat <- predict(reg2, type = "response")
data_post <- data %>%
filter(year > 1988)
data_post$phat <- predict(reg2, type = "response")
data_post %>%
ggplot(aes(x = phat, fill = comp_level))  +
geom_histogram(aes(y = ..density..),
alpha = .5, binwidth = .05, position = "identity")
?hist
p1 <- hist(x = data_post$phat,
freq = FALSE)
p1 <- hist(x = data_post[data_post$comp_level == "highly_competitive"]$phat,
freq = FALSE)
data_post %>%
filter(comp_level  == "highly_competitive")
dp_c <-data_post %>%
filter(comp_level  == "highly_competitive")
p1 <- hist(x = dp_c$phat)
p1
hist(x = dp_c$phat)
##Col 1
pvote1<-lm(curr.pct ~  prev.pct + fema.dis  + log(ppinc.adj) + pinc.chg + cong.pres + pres.party  + comp + ev + incumb + as.factor(state), data = data1)
##Col 2
pvote2<-lm(curr.pct ~  prev.pct + sqrt(fema.dis)  + log(ppinc.adj) + pinc.chg + cong.pres + pres.party  + comp + ev + incumb + as.factor(state), data = data1)
tbl_3 <- stargazer(pvote1, pvote2,
title = "Model of State-Wide Presidential Election Outcomes",
align = TRUE,
type = "text",
omit = "state",
order = c("fema.dis", "prev.pct",
"ppinc.adj", "pinc.chg",
"cong.pres", "pres.party",
"comp", "ev", "incumb"))
tbl_3 <- stargazer(pvote1, pvote2,
title = "Model of State-Wide Presidential Election Outcomes",
align = TRUE,
type = "text",
omit = "state",
order = c("fema.dis", "prev.pct",
"ppinc.adj", "pinc.chg",
"cong.pres", "pres.party",
"comp", "ev", "incumb"),
covariate.labels = c("Presidential Disaster Declarations",
"Presidential Disaster Declarations (sqrt)",
"Previous Vote Share",
"Personal Per Capita Income (logged)",
"Change in Per Capita Income",
"Congressional Partisanship",
"Governor's Partisanship",
"Competitiveness",
"Electoral Votes",
"Incumbent",
"Intercept"),
digits = 2,
column.labels = c("Model 1", "Model 2"),
keep.stat = c("n", "rsq",  "adj.rsq"))
data_pre %>%
group_by(comp_level) %>%
summarise(avg_phat = mean(phat))
data_pre <- data_post <- data %>%
filter(year < 1989)
data_pre$phat <- predict(reg, type = "response")
data_pre$phat <- predict(reg1, type = "response")
data_pre <- data_post <- data %>%
filter(year < 1989)
data_pre$phat <- predict(reg1, type = "response")
data_pre %>%
group_by(comp_level) %>%
summarise(avg_phat = mean(phat))
data_post %>%
group_by(comp_level) %>%
summarise(avg_phat = mean(phat))
data_post <- data %>%
filter(year > 1988)
data_post$phat <- predict(reg2, type = "response")
data_post %>%
group_by(comp_level) %>%
summarise(avg_phat = mean(phat))
quantile(comp, .75, names = FALSE)
quantile(data$comp, .75, names = FALSE)
median(data$comp)
# reading in the two data frames the data is the almost 1,000 presidential
# disasters declared from 1981 to 2004. Unit is number of disasters in each
# state per year. So for 24 years and 50 states there are a total of 1,200 observations
data <- read.csv("political_disaster_replication_t2.csv",
stringsAsFactors = FALSE)
data <- data  %>%
mutate(ppinc.adj.log = log(ppinc.adj))
data1<-read.csv("political_disaster_replication_t3.csv")
# giving data attribute labels
# classifying states as either high or low competition based off of median
data <- data %>%
mutate(comp_level = if_else(comp > quantile(data$comp, .75, names = FALSE), "highly_competitive",
if_else(comp < quantile(data$comp, .25, names = FALSE), "not competitive", "medium")))
data
# table 1 is summary statistics of presidential disaster declarations, actual
# disasters, electoral votes, competitiveness,  per  capita personal income
# (logged),insurance dollars (logged), congressional delegation sameparty as
# president, and governor same party as  the president
# creating initial  summary table to base for loop off of
sum_tab <- tibble(variable = "Presidential Disaster Declaration", Mean = mean(data$fema.dis),
Std_Dev = sd(data$fema.dis),
Min = min(data$fema.dis),
Max = max(data$fema.dis))
# just selecting variables I'm creating summaries of
data_sum <- data %>%
select(fema.dis, priv.dis, ev, comp, ppinc.adj.log, INSURADJ.L, cong.pres, pres.party)
# creating a vector of labels for the summary table
labs <- c("Presidential Disaster Declarations", "Actual Disasters", "Electoral Votes",
"Competitiveness",
"Per Capita Personal Income (logged)",
"InsuranceDollars (logged)",
"Congressional Delegation Same party as the President",
"Governor Same Party as the President")
# using a for loop to do the rest of the summary table
for(i in 2:8){
mean <- mean(data_sum[,i])
sd <- sd(data_sum[,i])
min <- min(data_sum[,i])
max <- max(data_sum[,i])
vec <- tibble(variable = labs[i], Mean = mean,
Std_Dev = sd,
Min = min,
Max = max)
sum_tab <- rbind(sum_tab, vec)
}
# turning summary table into gt object
tbl_1 <- sum_tab %>%
gt() %>%
fmt_number(columns = 2:5,
decimals = 1)
##Table 2 Model of Presidential Disaster Declarations, Pooled Model (Column 1)
##and Split Sample Model (Columns 2 and 3) (p. 1147)
##Col 1 (full)
reg<-glm(fema.dis ~ priv.dis + INSURADJ.L + log(ppinc.adj) + ev + comp + reagan1 + reagan2 + bush + clinton1 + wbush + p2 + p3 + p4 + cong.pres + pres.party + as.factor(state), family = poisson, data=data)
##Col 2 (pre-Stafford)
reg1<-glm(fema.dis ~ priv.dis + INSURADJ.L + log(ppinc.adj) + ev + comp + reagan1 + p2 + p3 + p4 + cong.pres + pres.party + as.factor(state), family = poisson, data=data[data$year < 1989,])
##Col 3 (post-stafford)
reg2 <- glm(fema.dis ~ priv.dis + INSURADJ.L + log(ppinc.adj) + ev + comp + bush + clinton1 + wbush + p2 + p3 + p4 + cong.pres + pres.party + as.factor(state), family = poisson, data=data[data$year>1988,])
# stargazer table
tbl_2 <- stargazer(reg, reg1, reg2,
title = "Model of Presidential Disaster Declarations,\n Pooled Model (Column 1)\nand Split Sample Model (Columns 2 and 3)",
align = TRUE,
type = "latex",
omit = "state",
order = c("comp", "priv.dis", "INSURADJ.L",
"ppinc.adj",
"ev", "p2", "p3", "p4",
"cong.pres", "pres.party",
"reagan1", "reagan2",
"bush", "clinton1", "wbush"),
covariate.labels = c("Competitiveness", "Actual Disasters",
"Insurance cost (logged)", "Per capita income", "Electoral Votes", "year 2 of admin",
"year 3 of admin", "year 4 of admin", "Congressional partisanship", "President / Governor same party",
"Reagan (term 1)", "Reagan (term 2)", "GHW Bush",
"W Bush", "Clinton (term 1)", "Intercept"),
digits = 2,
column.labels = c("full", "pre-Stafford", "post-Stafford"),
keep.stat = c("n", "aic", "bic", "ll"))
data_post <- data %>%
filter(year > 1988)
# creating predicted responses
data_post$phat <- predict(reg2, type = "response")
# this isn't quite right/the same but I don't know why
ggplot(data_post, aes(x = comp, y = fema.dis)) +
geom_smooth(method = "glm",
method.args = list(family = "poisson")) +
theme_classic()
fig_1 <- plot_model(reg2, type = "eff",
terms = "comp",
ci.lvl = NA,
axis.lim = list(c(25,50), c(0,1.5))) +
theme_classic() +
labs(title = "Figure 1: Effect of Competitiveness  on Number\n of  Disaster Declarattions, Post-Stafford Act Only",
x = "Competitiveness",
y = "Expected Number of Disaster Declarations")
data_pre <- data_post <- data %>%
filter(year < 1989)
data_pre$phat <- predict(reg1, type = "response")
data_pre %>%
group_by(comp_level) %>%
summarise(avg_phat = mean(phat))
data_post %>%
group_by(comp_level) %>%
summarise(avg_phat = mean(phat))
data_post
data_post$phat <- predict(reg2, type = "response")
data_post <- data %>%
filter(year > 1988)
data_post$phat <- predict(reg2, type = "response")
data_post %>%
group_by(comp_level) %>%
summarise(avg_phat = mean(phat))
data_post %>%
ggplot(aes(x = phat, fill = comp_level))  +
geom_histogram(aes(y = ..density..),
alpha = .5, binwidth = .05, position = "identity")
data_post %>%
filter(comp_level != "medium") %>%
ggplot(aes(x = phat, fill = comp_level))  +
geom_histogram(aes(y = ..density..),
alpha = .5, binwidth = .05, position = "identity")
?scale_x_continuous
data_post %>%
filter(comp_level != "medium") %>%
ggplot(aes(x = phat, fill = comp_level))  +
geom_histogram(aes(y = ..density..),
alpha = .5, binwidth = .05, position = "identity") +
scale_x_continuous(limits = c(0,2))
data_post %>%
group_by(comp_level) %>%
summarise(avg_phat = mean(phat))
data_post %>%
filter(comp_level != "medium") %>%
ggplot(aes(x = phat, fill = comp_level))  +
geom_histogram(aes(y = ..density..),
alpha = .5, binwidth = .05, position = "identity") +
geom_vline(xintercept = 1.05, col = "red") +
geom_vline(xintercept = .55, col = "blue") +
scale_x_continuous(limits = c(0,2)) +
theme_classic()
data_post %>%
filter(comp_level != "medium") %>%
ggplot(aes(x = phat, fill = comp_level))  +
geom_histogram(aes(y = ..density..),
alpha = .5, binwidth = .05, position = "identity") +
geom_vline(xintercept = 1.05, col = "indianred") +
geom_vline(xintercept = .55, col = "steelblue2") +
scale_x_continuous(limits = c(0,2)) +
theme_classic()
?scale_fill_discrete
