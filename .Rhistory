# data pre and post
state_pre <- state_df %>%
filter(year < 1989)
state_post <- state_df %>%
filter(year > 1988)
# pre preds
pre_pred <- predict(reg1, newdata = state_pre)
pre_1 <- state_pre %>%
cbind(pre_pred) %>%
mutate(yhat = pre_pred) %>%
select(-pre_pred)
# post preds
post_pred <- predict(reg2, newdata = state_post)
post_1 <- state_post %>%
cbind(post_pred) %>%
mutate(yhat = post_pred) %>%
select(-post_pred)
# combining pred dfs
state_comb <- rbind(pre_1, post_1)
# plot of predictions vs actual
pred_vs_real <- state_comb %>%
ggplot(aes(x = year)) +
geom_point(aes(y = yhat), col = "red") +
geom_line(aes(y = yhat), col = "red") +
geom_point(aes(y = fema.dis), col = "blue") +
geom_linet(aes(y = fema.dis), col = "blue") +
labs(title = paste0(s, " Model Performance"),
subtitle = "Predictions in red",
x = "Year",
y = "Disaster Declarations") +
theme_classic()
# actual disasters
priv.dis <- state_comb %>%
ggplot(aes(x = year, y = priv.dis)) +
geom_point(col = "steelblue2") +
labs(title = "Actual Disasters",
subtitle = "Positive model coefficient (pre and post)",
y = "Actual Disasters",
x = "Year") +
theme_classic()
# comp
comp <- state_comb %>%
ggplot(aes(x = year, y = comp)) +
geom_point(col = "steelblue2") +
labs(title = "Competitiveness",
subtitle = "Positive model coefficient post, negative pre",
y = "Competitiveness",
x = "Year") +
theme_classic()
# p4
p4 <- state_comb %>%
ggplot(aes(x = year, y = p4)) +
geom_point(col = "steelblue2") +
labs(title = "4th Year in Term",
subtitle = "Positive model coefficient (pre and post)",
y = "4th year",
x = "Year") +
theme_classic()
results <- list(pred_vs_real, priv.dis,
comp, p4)
return(results)
}
# key coefficients are priv.dis, comp, p4
# function to arrange the plots I made above
ext_grid <- function(s){
graphs <- state_comp_pred(s)
grid <- ggarrange(graphs[[1]], graphs[[2]],
graphs[[3]], graphs[[4]])
return(grid)
}
ext_grid("Alabama")
# now going to make a function that saves predictions for states
state_comp_pred <- function(s){
# state df
state_df <- data %>%
filter(state == s)
# data pre and post
state_pre <- state_df %>%
filter(year < 1989)
state_post <- state_df %>%
filter(year > 1988)
# pre preds
pre_pred <- predict(reg1, newdata = state_pre)
pre_1 <- state_pre %>%
cbind(pre_pred) %>%
mutate(yhat = pre_pred) %>%
select(-pre_pred)
# post preds
post_pred <- predict(reg2, newdata = state_post)
post_1 <- state_post %>%
cbind(post_pred) %>%
mutate(yhat = post_pred) %>%
select(-post_pred)
# combining pred dfs
state_comb <- rbind(pre_1, post_1)
# plot of predictions vs actual
pred_vs_real <- state_comb %>%
ggplot(aes(x = year)) +
geom_point(aes(y = yhat), col = "red") +
geom_line(aes(y = yhat), col = "red") +
geom_point(aes(y = fema.dis), col = "blue") +
geom_line(aes(y = fema.dis), col = "blue") +
labs(title = paste0(s, " Model Performance"),
subtitle = "Predictions in red",
x = "Year",
y = "Disaster Declarations") +
theme_classic()
# actual disasters
priv.dis <- state_comb %>%
ggplot(aes(x = year, y = priv.dis)) +
geom_point(col = "steelblue2") +
labs(title = "Actual Disasters",
subtitle = "Positive model coefficient (pre and post)",
y = "Actual Disasters",
x = "Year") +
theme_classic()
# comp
comp <- state_comb %>%
ggplot(aes(x = year, y = comp)) +
geom_point(col = "steelblue2") +
labs(title = "Competitiveness",
subtitle = "Positive model coefficient post, negative pre",
y = "Competitiveness",
x = "Year") +
theme_classic()
# p4
p4 <- state_comb %>%
ggplot(aes(x = year, y = p4)) +
geom_point(col = "steelblue2") +
labs(title = "4th Year in Term",
subtitle = "Positive model coefficient (pre and post)",
y = "4th year",
x = "Year") +
theme_classic()
results <- list(pred_vs_real, priv.dis,
comp, p4)
return(results)
}
# key coefficients are priv.dis, comp, p4
# function to arrange the plots I made above
ext_grid <- function(s){
graphs <- state_comp_pred(s)
grid <- ggarrange(graphs[[1]], graphs[[2]],
graphs[[3]], graphs[[4]])
return(grid)
}
ext_grid("Alabama")
ext_1
session()
version
R.Version()
knitr::opts_chunk$set(echo = TRUE)
library(gtools)
library(apsrtable)
library(MASS)
library(labelled)
library(gtsummary)
library(gt)
library(stargazer)
library(sjPlot)
library(ggpubr)
library(gtable)
library(grid)
library(gridExtra)
library(tidyverse)
ext_grid("Arizona")
knitr::opts_chunk$set(echo = TRUE)
library(gtools)
library(apsrtable)
library(MASS)
library(labelled)
library(gtsummary)
library(gt)
library(stargazer)
library(sjPlot)
library(ggpubr)
library(gtable)
library(grid)
library(gridExtra)
library(tidyverse)
# reading in the two data frames the data is the almost 1,000 presidential
# disasters declared from 1981 to 2004. Unit is number of disasters in each
# state per year. So for 24 years and 50 states there are a total of 1,200 observations
data <- read.csv("data/political_disaster_replication_t2.csv",
stringsAsFactors = FALSE)
data <- data  %>%
mutate(ppinc.adj.log = log(ppinc.adj))
data1<-read.csv("data/political_disaster_replication_t3.csv")
# giving data attribute labels
# classifying states as either high or low competition based off of median
data <- data %>%
mutate(comp_level = if_else(comp > quantile(data$comp, .75, names = FALSE), "highly_competitive",
if_else(comp < quantile(data$comp, .25, names = FALSE), "not competitive", "medium")))
# table 1 is summary statistics of presidential disaster declarations, actual
# disasters, electoral votes, competitiveness,  per  capita personal income
# (logged),insurance dollars (logged), congressional delegation sameparty as
# president, and governor same party as  the president
# creating initial  summary table to base for loop off of
sum_tab <- tibble(variable = "Presidential Disaster Declaration", Mean = mean(data$fema.dis),
Std_Dev = sd(data$fema.dis),
Min = min(data$fema.dis),
Max = max(data$fema.dis))
# just selecting variables I'm creating summaries of
data_sum <- data %>%
select(fema.dis, priv.dis, ev, comp, ppinc.adj.log, INSURADJ.L, cong.pres, pres.party)
# creating a vector of labels for the summary table
labs <- c("Presidential Disaster Declarations", "Actual Disasters", "Electoral Votes",
"Competitiveness",
"Per Capita Personal Income (logged)",
"InsuranceDollars (logged)",
"Congressional Delegation Same party as the President",
"Governor Same Party as the President")
# using a for loop to do the rest of the summary table
for(i in 2:8){
mean <- mean(data_sum[,i])
sd <- sd(data_sum[,i])
min <- min(data_sum[,i])
max <- max(data_sum[,i])
vec <- tibble(variable = labs[i], Mean = mean,
Std_Dev = sd,
Min = min,
Max = max)
sum_tab <- rbind(sum_tab, vec)
}
# turning summary table into gt object
tbl_1 <- sum_tab %>%
gt() %>%
fmt_number(columns = 2:5,
decimals = 1)
# Table 2 Model of Presidential Disaster Declarations, Pooled Model (Column 1)
# and Split Sample Model (Columns 2 and 3) (p. 1147)
# Col 1 (full)
reg <- glm(fema.dis ~ priv.dis + INSURADJ.L + log(ppinc.adj) + ev + comp + reagan1 + reagan2 + bush + clinton1 + wbush + p2 + p3 + p4 + cong.pres + pres.party + as.factor(state),
family = poisson,
data=data)
# Col 2 (pre-Stafford). Replication code.
reg1 <- glm(fema.dis ~ priv.dis + INSURADJ.L + log(ppinc.adj) + ev + comp + reagan1 + p2 + p3 + p4 + cong.pres + pres.party + as.factor(state),
family = poisson,
data=data[data$year < 1989,])
# Col 3 (post-stafford)
reg2 <- glm(fema.dis ~ priv.dis + INSURADJ.L + log(ppinc.adj) + ev + comp + bush + clinton1 + wbush + p2 + p3 + p4 + cong.pres + pres.party + as.factor(state),
family = poisson,
data=data[data$year>1988,])
# stargazer table
tbl_2 <- stargazer(reg, reg1, reg2,
title = "Model of Presidential Disaster Declarations",
type = "latex",
omit = "state",
order = c("comp", "priv.dis", "INSURADJ.L",
"ppinc.adj",
"ev", "p2", "p3", "p4",
"cong.pres", "pres.party",
"reagan1", "reagan2",
"bush", "clinton1", "wbush"),
covariate.labels = c("Competitiveness", "Actual Disasters",
"Insurance cost (logged)", "Per capita income", "Electoral Votes", "year 2 of admin",
"year 3 of admin", "year 4 of admin", "Congressional partisanship", "President / Governor same party",
"Reagan (term 1)", "Reagan (term 2)", "GHW Bush",
"W Bush", "Clinton (term 1)", "Intercept"),
digits = 2,
# column.labels = c("full", "pre-Stafford", "post-Stafford"),
keep.stat = c("n", "aic", "ll"))
# creating data for post stafford. Maybe I should put this at the top?
data_post <- data %>%
filter(year > 1988) %>%
mutate(phat = predict(reg2, type = "response"))
# this isn't quite right/the same but I don't know why
ggplot(data_post, aes(x = comp, y = fema.dis)) +
geom_smooth(method = "glm",
method.args = list(family = "poisson")) +
theme_classic()
fig_1 <- plot_model(reg2, type = "eff",
terms = "comp",
ci.lvl = NA,
axis.lim = list(c(25,50), c(0,1.5))) +
theme_classic() +
labs(title = "Figure 1: Effect of Competitiveness  on Number\n of  Disaster Declarattions, Post-Stafford Act Only",
x = "Competitiveness",
y = "Expected Number of Disaster Declarations")
# already made predictions for post stafford act but now need to do it for pre
data_pre <- data %>%
filter(year < 1989) %>%
mutate(phat = predict(reg1, type = "response"))
# looking at the difference in means pre stafford
pre_summaries <- data_pre %>%
group_by(comp_level) %>%
summarise(avg_phat = mean(phat))
# looking at the difference in means post stafford. Much  more of a difference
post_summaries <- data_post %>%
group_by(comp_level) %>%
summarise(avg_phat = mean(phat))
# filtering to only low and high competition (defined as 25% and 75% of
# competitiveness)
# creating first part of graph for pre stafford era using predictions from reg1
fig_2_a <- data_pre %>%
filter(comp_level != "medium") %>%
ggplot(aes(x = phat, fill = comp_level))  +
geom_histogram(aes(y = ..density..),
alpha = .5, binwidth = .075, position = "identity") +
geom_vline(xintercept = .32, col = "indianred") +
geom_vline(xintercept = .37, col = "steelblue2") +
scale_x_continuous(limits = c(0,3)) +
scale_fill_manual(values = c("indianred", "steelblue2")) +
labs(title = "Predicted Disasters by Competitiveness Pre-Stafford",
x = "Predicted Values",
y = "Density") +
theme_classic()
# creating second part of the graph for post stafford era using predictions from reg2
fig_2_b <- data_post %>%
filter(comp_level != "medium") %>%
ggplot(aes(x = phat, fill = comp_level))  +
geom_histogram(aes(y = ..density..),
alpha = .5, binwidth = .075, position = "identity") +
geom_vline(xintercept = 1.05, col = "indianred") +
geom_vline(xintercept = .55, col = "steelblue2") +
scale_x_continuous(limits = c(0,3)) +
scale_fill_manual(values = c("indianred", "steelblue2")) +
labs(title = "Predicted Disasters by Competitiveness Post-Stafford",
x = "Predicted Values",
y = "Density") +
theme_classic()
# putting the pre and post graphs together
fig_2 <- ggarrange(fig_2_a, fig_2_b,
ncol = 1)
# Col 1. Taken from replication code
pvote1 <- lm(curr.pct ~  prev.pct + fema.dis  + log(ppinc.adj) + pinc.chg + cong.pres + pres.party  + comp + ev + incumb + as.factor(state),
data = data1)
# Col 2. Taken from replication code
pvote2 <- lm(curr.pct ~  prev.pct + sqrt(fema.dis)  + log(ppinc.adj) + pinc.chg + cong.pres + pres.party  + comp + ev + incumb + as.factor(state),
data = data1)
# making stargazer table
tbl_3 <- stargazer(pvote1, pvote2,
title = "Model of State-Wide Presidential Election Outcomes",
#align = TRUE,
type = "text",
omit = "state",
order = c("fema.dis", "prev.pct",
"ppinc.adj", "pinc.chg",
"cong.pres", "pres.party",
"comp", "ev", "incumb"),
covariate.labels = c("Presidential Disaster Declarations",
"Presidential Disaster Declarations (sqrt)",
"Previous Vote Share",
"Personal Per Capita Income (logged)",
"Change in Per Capita Income",
"Congressional Partisanship",
"Governor's Partisanship",
"Competitiveness",
"Electoral Votes",
"Incumbent",
"Intercept"),
digits = 2,
column.labels = c("Model 1", "Model 2"),
keep.stat = c("n", "rsq",  "adj.rsq"))
tbl_1
stargazer(reg, reg1, reg2,
title = "Model of Presidential Disaster Declarations",
type = "latex",
omit = "state",
order = c("comp", "priv.dis", "INSURADJ.L",
"ppinc.adj",
"ev", "p2", "p3", "p4",
"cong.pres", "pres.party",
"reagan1", "reagan2",
"bush", "clinton1", "wbush"),
covariate.labels = c("Competitiveness", "Actual Disasters",
"Insurance cost (logged)", "Per capita income", "Electoral Votes", "year 2 of admin",
"year 3 of admin", "year 4 of admin", "Congressional partisanship", "President / Governor same party",
"Reagan (term 1)", "Reagan (term 2)", "GHW Bush",
"W Bush", "Clinton (term 1)", "Intercept"),
digits = 2,
# column.labels = c("full", "pre-Stafford", "post-Stafford"),
keep.stat = c("n", "aic", "ll"),
header = FALSE,
no.space = TRUE,
column.sep.width = "3pt",
font.size = "small",
#object.names = TRUE,
column.labels = c("full", "pre", "post"))
fig_1
fig_2
stargazer(pvote1, pvote2,
title = "Model of State-Wide Presidential Election Outcomes",
#align = TRUE,
type = "latex",
omit = "state",
order = c("fema.dis", "prev.pct",
"ppinc.adj", "pinc.chg",
"cong.pres", "pres.party",
"comp", "ev", "incumb"),
covariate.labels = c("Presidential Disaster Declarations",
"Presidential Disaster Declarations (sqrt)",
"Previous Vote Share",
"Personal Per Capita Income (logged)",
"Change in Per Capita Income",
"Congressional Partisanship",
"Governor's Partisanship",
"Competitiveness",
"Electoral Votes",
"Incumbent",
"Intercept"),
digits = 2,
column.labels = c("Model 1", "Model 2"),
keep.stat = c("n", "rsq",  "adj.rsq"),
header = FALSE,
no.space = TRUE,
column.sep.width = "3pt",
font.size = "small")
# arranging to find the states with the most variation in competitiveness. Those
# in top ten are Nevada, Georgia, New Hampshire, Arizona, MA, RI, FL, NY, WY, UT
most_comp_states <- data %>%
group_by(state) %>%
summarise(max = max(comp),
min = min(comp),
diff = max - min) %>%
arrange(desc(diff)) %>%
head(5) %>%
pull(state)
# going to plot the competitiveness over time
variable_data <- data %>%
filter(state %in% most_comp_states)
ext_1 <- variable_data %>%
ggplot(aes(x = year, y = comp, col = state)) +
geom_point() +
geom_line() +
labs(title = "Competitiveness over Time",
subtitle = "States with most variation in competitiveness",
x = "Year",
y = "Competitiveness") +
theme_classic()
ext_1
# now going to make a function that saves predictions for states
state_comp_pred <- function(s){
# state df
state_df <- data %>%
filter(state == s)
# data pre and post
state_pre <- state_df %>%
filter(year < 1989)
state_post <- state_df %>%
filter(year > 1988)
# pre preds
pre_pred <- predict(reg1, newdata = state_pre)
pre_1 <- state_pre %>%
cbind(pre_pred) %>%
mutate(yhat = pre_pred) %>%
select(-pre_pred)
# post preds
post_pred <- predict(reg2, newdata = state_post)
post_1 <- state_post %>%
cbind(post_pred) %>%
mutate(yhat = post_pred) %>%
select(-post_pred)
# combining pred dfs
state_comb <- rbind(pre_1, post_1)
# plot of predictions vs actual
pred_vs_real <- state_comb %>%
ggplot(aes(x = year)) +
geom_point(aes(y = yhat), col = "red") +
geom_line(aes(y = yhat), col = "red") +
geom_point(aes(y = fema.dis), col = "blue") +
geom_line(aes(y = fema.dis), col = "blue") +
labs(title = paste0(s, " Model Performance"),
subtitle = "Predictions in red",
x = "Year",
y = "Disaster Declarations") +
theme_classic()
# actual disasters
priv.dis <- state_comb %>%
ggplot(aes(x = year, y = priv.dis)) +
geom_point(col = "steelblue2") +
labs(title = "Actual Disasters",
subtitle = "Positive model coefficient (pre and post)",
y = "Actual Disasters",
x = "Year") +
theme_classic()
# comp
comp <- state_comb %>%
ggplot(aes(x = year, y = comp)) +
geom_point(col = "steelblue2") +
labs(title = "Competitiveness",
subtitle = "Positive model coefficient post, negative pre",
y = "Competitiveness",
x = "Year") +
theme_classic()
# p4
p4 <- state_comb %>%
ggplot(aes(x = year, y = p4)) +
geom_point(col = "steelblue2") +
labs(title = "4th Year in Term",
subtitle = "Positive model coefficient (pre and post)",
y = "4th year",
x = "Year") +
theme_classic()
results <- list(pred_vs_real, priv.dis,
comp, p4)
return(results)
}
# key coefficients are priv.dis, comp, p4
# function to arrange the plots I made above
ext_grid <- function(s){
graphs <- state_comp_pred(s)
grid <- ggarrange(graphs[[1]], graphs[[2]],
graphs[[3]], graphs[[4]])
return(grid)
}
ext_grid("Arizona")
ext_grid("Arizona")
ext_grid("Massachusetts")
ext_grid("Georgia")
ext_grid("New Hampshire")
ext_grid("Nevada")
