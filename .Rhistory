FL %>%
arrange(desc(fema.dis))
# making predictions for FL pre and post stafford act
FL_pre <- FL %>%
filter(year < 1989)
FL_post <- FL %>%
filter(year > 1988)
# pre stafford act
FL_pre_pred <- predict(reg1, newdata = FL_pre)
FL_pre_1 <- FL_pre %>%
cbind(FL_pre_pred) %>%
mutate(yhat = FL_pre_pred) %>%
select(-FL_pre_pred)
# post stafford act
FL_post_pred <- predict(reg2, newdata = FL_post)
FL_post_1 <- FL_post %>%
cbind(FL_post_pred) %>%
mutate(yhat = FL_post_pred) %>%
select(-FL_post_pred)
# combining the prediction dfs
FL_comb <- rbind(FL_pre_1, FL_post_1)
FL_comb %>%
ggplot(aes(x = year)) +
geom_point(aes(y = yhat), col = "red") +
geom_point(aes(y = fema.dis), col = "blue") +
theme_classic()
FL_comb %>%
ggplot(aes(x = comp, y = yhat)) +
geom_point() +
labs(title = "FL Competitiveness over Time") +
theme_classic()
FL_comb %>%
ggplot(aes(x = year)) +
geom_point(aes(y = yhat), col = "red") +
geom_point(aes(y = fema.dis), col = "blue") +
theme_classic()
summary(reg1)
summary(reg2)
data
glimpse(data)
summary(reg2)
summary(reg1)
# now going to make a function that saves predictions for states
state_comp_pred <- function(s){
# state df
state_df <- data %>%
filter(state == s)
# data pre and post
state_pre <- state_df %>%
filter(year < 1989)
state_post <- state_df %>%
filter(year > 1988)
# pre preds
pre_pred <- predict(reg1, newdata = state_pre)
pre_1 <- state_pre %>%
cbind(pre_pred) %>%
mutate(yhat = pre_pred) %>%
select(-pre_pred)
# post preds
post_pred <- predict(reg2, newdata = state_post)
post_1 <- state_post %>%
cbind(post_pred) %>%
mutate(yhat = post_pred) %>%
select(-post_pred)
# combining pred dfs
state_comb <- rbind(pre_1, post_1)
# plot of predictions vs actual
pred_vs_real <- state_comb %>%
ggplot(aes(x = year)) +
geom_point(aes(y = yhat), col = "red") +
geom_point(aes(y = fema.dis), col = "blue") +
labs(title = paste0(s, " Model Performance"),
x = "Year",
y = "Disaster Declarations") +
theme_classic()
# actual disasters
priv.dis <- state_comb %>%
ggplot(aes(x = year, y = priv.dis)) +
geom_point(aes(col = "steelblue2")) +
labs(title = "Actual Disasters",
subtitle = "Positive model coefficient (pre and post)",
y = "Actual Disasters",
x = "Year") +
theme_classic()
# comp
comp <- state_comb %>%
ggplot(aes(x = year, y = comp)) +
geom_point(aes(col = "steelblue2")) +
labs(title = "Competitiveness",
subtitle = "Positive model coefficient post, negative pre",
y = "Competitiveness",
x = "Year") +
theme_classic()
# p4
p4 <- state_comb %>%
ggplot(aes(x = year, y = p4)) +
geom_point(aes(col = "steelblue2")) +
labs(title = "4th Year in Term",
subtitle = "Positive model coefficient (pre and post)",
y = "4th year",
x = "Year") +
theme_classic()
results <- list(pred_vs_real, priv.dis,
comp, p4)
return(results)
}
# key coefficients are priv.dis, comp, p4, bush, clinton
state_comp_pred("Alabama")
state_comp_pred("Alabama")[2]
# now going to make a function that saves predictions for states
state_comp_pred <- function(s){
# state df
state_df <- data %>%
filter(state == s)
# data pre and post
state_pre <- state_df %>%
filter(year < 1989)
state_post <- state_df %>%
filter(year > 1988)
# pre preds
pre_pred <- predict(reg1, newdata = state_pre)
pre_1 <- state_pre %>%
cbind(pre_pred) %>%
mutate(yhat = pre_pred) %>%
select(-pre_pred)
# post preds
post_pred <- predict(reg2, newdata = state_post)
post_1 <- state_post %>%
cbind(post_pred) %>%
mutate(yhat = post_pred) %>%
select(-post_pred)
# combining pred dfs
state_comb <- rbind(pre_1, post_1)
# plot of predictions vs actual
pred_vs_real <- state_comb %>%
ggplot(aes(x = year)) +
geom_point(aes(y = yhat), col = "red") +
geom_point(aes(y = fema.dis), col = "blue") +
labs(title = paste0(s, " Model Performance"),
x = "Year",
y = "Disaster Declarations") +
theme_classic()
# actual disasters
priv.dis <- state_comb %>%
ggplot(aes(x = year, y = priv.dis)) +
geom_point(col = "steelblue2") +
labs(title = "Actual Disasters",
subtitle = "Positive model coefficient (pre and post)",
y = "Actual Disasters",
x = "Year") +
theme_classic()
# comp
comp <- state_comb %>%
ggplot(aes(x = year, y = comp)) +
geom_point(col = "steelblue2") +
labs(title = "Competitiveness",
subtitle = "Positive model coefficient post, negative pre",
y = "Competitiveness",
x = "Year") +
theme_classic()
# p4
p4 <- state_comb %>%
ggplot(aes(x = year, y = p4)) +
geom_point(col = "steelblue2") +
labs(title = "4th Year in Term",
subtitle = "Positive model coefficient (pre and post)",
y = "4th year",
x = "Year") +
theme_classic()
results <- list(pred_vs_real, priv.dis,
comp, p4)
return(results)
}
# key coefficients are priv.dis, comp, p4
state_comp_pred("Alabama")[1]
# now going to make a function that saves predictions for states
state_comp_pred <- function(s){
# state df
state_df <- data %>%
filter(state == s)
# data pre and post
state_pre <- state_df %>%
filter(year < 1989)
state_post <- state_df %>%
filter(year > 1988)
# pre preds
pre_pred <- predict(reg1, newdata = state_pre)
pre_1 <- state_pre %>%
cbind(pre_pred) %>%
mutate(yhat = pre_pred) %>%
select(-pre_pred)
# post preds
post_pred <- predict(reg2, newdata = state_post)
post_1 <- state_post %>%
cbind(post_pred) %>%
mutate(yhat = post_pred) %>%
select(-post_pred)
# combining pred dfs
state_comb <- rbind(pre_1, post_1)
# plot of predictions vs actual
pred_vs_real <- state_comb %>%
ggplot(aes(x = year)) +
geom_point(aes(y = yhat), col = "red") +
geom_point(aes(y = fema.dis), col = "blue") +
labs(title = paste0(s, " Model Performance"),
subtitle = "Predictions in red",
x = "Year",
y = "Disaster Declarations") +
theme_classic()
# actual disasters
priv.dis <- state_comb %>%
ggplot(aes(x = year, y = priv.dis)) +
geom_point(col = "steelblue2") +
labs(title = "Actual Disasters",
subtitle = "Positive model coefficient (pre and post)",
y = "Actual Disasters",
x = "Year") +
theme_classic()
# comp
comp <- state_comb %>%
ggplot(aes(x = year, y = comp)) +
geom_point(col = "steelblue2") +
labs(title = "Competitiveness",
subtitle = "Positive model coefficient post, negative pre",
y = "Competitiveness",
x = "Year") +
theme_classic()
# p4
p4 <- state_comb %>%
ggplot(aes(x = year, y = p4)) +
geom_point(col = "steelblue2") +
labs(title = "4th Year in Term",
subtitle = "Positive model coefficient (pre and post)",
y = "4th year",
x = "Year") +
theme_classic()
results <- list(pred_vs_real, priv.dis,
comp, p4)
return(results)
}
# key coefficients are priv.dis, comp, p4
# function to arrange the plots I made above
ext_grid <- function(s){
graphs <- state_comp_pred(s)
grid <- ggarrange(graphs[1],
graphs[2],
graphs[3],
graphs[4])
return(grid)
}
ext_grid("Alabama")
# function to arrange the plots I made above
ext_grid <- function(s){
graphs <- state_comp_pred(s)
grid <- ggarrange(graphs[[1]],
graphs[[2]],
graphs[[3]],
graphs[[4]])
return(grid)
}
ext_grid("Alabama")
?grid.arrange
??grid.arrange
library(gtable)
library(gtable)
library(grid)
ext_grid <- function(s){
graphs <- state_comp_pred(s)
# layout matrix
lay <- rbind(c(1,1,1),
c(2,3,4))
grid.arrange(grobs = graphs,
layout_matrix = lay)
}
ext_grid <- function(s){
graphs <- state_comp_pred(s)
# layout matrix
lay <- rbind(c(1,1,1),
c(2,3,4))
grid <- grid.arrange(grobs = graphs,
layout_matrix = lay)
return(grid)
}
ext_grid("Alabama")
install.packages("grid")
install.packages("gridExtra")
??grid.arrange
?arrangeGrob
library(gridExtra)
?arrangeGrob
ext_grid <- function(s){
graphs <- state_comp_pred(s)
# layout matrix
lay <- rbind(c(1,1,1),
c(2,3,4))
grid <- arrangeGrob(grobs = graphs,
layout_matrix = lay)
return(grid)
}
ext_grid("Alabama")
ext_grid <- function(s){
graphs <- state_comp_pred(s)
# layout matrix
lay <- rbind(c(1,1,1),
c(2,3,4))
grid <- arrangeGrob(grobs = graphs,
layout_matrix = lay)
print(grid)
}
ext_grid("Alabama")
graphs <- state_comp_pred("Alabama")
grid.arrange(graphs[[1]],
arrangeGrob(graphs[[2]],
graphs[[3]],
graphs[[4]]),
nrow = 2)
lay <- rbind(c(1,1,1),
c(2,3,4))
grid.arrange(graphs[[1]], graphs[[2]],
graphs[[3]], graphs[[4]],
layout_matrix = lay)
ggarrange(graphs[[1]], graphs[[2]],
graphs[[3]], graphs[[4]],
nrow = 4)
lay <- rbind(c(1,1,1),
c(2,2,2),
c(3,3,3),
c(4,4,4))
grid.arrange(graphs[[1]], graphs[[2]],
graphs[[3]], graphs[[4]],
layout_matrix = lay)
lay <- rbind(c(1,1),
c(2,2),
c(3,3),
c(4,4))
grid.arrange(graphs[[1]], graphs[[2]],
graphs[[3]], graphs[[4]],
layout_matrix = lay)
ggarrange(graphs[[1]], graphs[[2]],
graphs[[3]], graphs[[4]],
ncol = 2)
ggarrange(graphs[[1]], graphs[[2]],
graphs[[3]], graphs[[4]])
ggarrange(graphs[[1]], graphs[[2]],
graphs[[3]], graphs[[4]],
top = "text")
ggarrange(graphs[[1]], graphs[[2]],
graphs[[3]], graphs[[4]])
# function to arrange the plots I made above
ext_grid <- function(s){
graphs <- state_comp_pred(s)
grid <- ggarrange(graphs[[1]], graphs[[2]],
graphs[[3]], graphs[[4]])
return(grid)
}
ext_grid("Alabama")
# now going to make a function that saves predictions for states
state_comp_pred <- function(s){
# state df
state_df <- data %>%
filter(state == s)
# data pre and post
state_pre <- state_df %>%
filter(year < 1989)
state_post <- state_df %>%
filter(year > 1988)
# pre preds
pre_pred <- predict(reg1, newdata = state_pre)
pre_1 <- state_pre %>%
cbind(pre_pred) %>%
mutate(yhat = pre_pred) %>%
select(-pre_pred)
# post preds
post_pred <- predict(reg2, newdata = state_post)
post_1 <- state_post %>%
cbind(post_pred) %>%
mutate(yhat = post_pred) %>%
select(-post_pred)
# combining pred dfs
state_comb <- rbind(pre_1, post_1)
# plot of predictions vs actual
pred_vs_real <- state_comb %>%
ggplot(aes(x = year)) +
geom_point(aes(y = yhat), col = "red") +
geom_line(aes(y = yhat), col = "red") +
geom_point(aes(y = fema.dis), col = "blue") +
geom_linet(aes(y = fema.dis), col = "blue") +
labs(title = paste0(s, " Model Performance"),
subtitle = "Predictions in red",
x = "Year",
y = "Disaster Declarations") +
theme_classic()
# actual disasters
priv.dis <- state_comb %>%
ggplot(aes(x = year, y = priv.dis)) +
geom_point(col = "steelblue2") +
labs(title = "Actual Disasters",
subtitle = "Positive model coefficient (pre and post)",
y = "Actual Disasters",
x = "Year") +
theme_classic()
# comp
comp <- state_comb %>%
ggplot(aes(x = year, y = comp)) +
geom_point(col = "steelblue2") +
labs(title = "Competitiveness",
subtitle = "Positive model coefficient post, negative pre",
y = "Competitiveness",
x = "Year") +
theme_classic()
# p4
p4 <- state_comb %>%
ggplot(aes(x = year, y = p4)) +
geom_point(col = "steelblue2") +
labs(title = "4th Year in Term",
subtitle = "Positive model coefficient (pre and post)",
y = "4th year",
x = "Year") +
theme_classic()
results <- list(pred_vs_real, priv.dis,
comp, p4)
return(results)
}
# key coefficients are priv.dis, comp, p4
# function to arrange the plots I made above
ext_grid <- function(s){
graphs <- state_comp_pred(s)
grid <- ggarrange(graphs[[1]], graphs[[2]],
graphs[[3]], graphs[[4]])
return(grid)
}
ext_grid("Alabama")
# now going to make a function that saves predictions for states
state_comp_pred <- function(s){
# state df
state_df <- data %>%
filter(state == s)
# data pre and post
state_pre <- state_df %>%
filter(year < 1989)
state_post <- state_df %>%
filter(year > 1988)
# pre preds
pre_pred <- predict(reg1, newdata = state_pre)
pre_1 <- state_pre %>%
cbind(pre_pred) %>%
mutate(yhat = pre_pred) %>%
select(-pre_pred)
# post preds
post_pred <- predict(reg2, newdata = state_post)
post_1 <- state_post %>%
cbind(post_pred) %>%
mutate(yhat = post_pred) %>%
select(-post_pred)
# combining pred dfs
state_comb <- rbind(pre_1, post_1)
# plot of predictions vs actual
pred_vs_real <- state_comb %>%
ggplot(aes(x = year)) +
geom_point(aes(y = yhat), col = "red") +
geom_line(aes(y = yhat), col = "red") +
geom_point(aes(y = fema.dis), col = "blue") +
geom_line(aes(y = fema.dis), col = "blue") +
labs(title = paste0(s, " Model Performance"),
subtitle = "Predictions in red",
x = "Year",
y = "Disaster Declarations") +
theme_classic()
# actual disasters
priv.dis <- state_comb %>%
ggplot(aes(x = year, y = priv.dis)) +
geom_point(col = "steelblue2") +
labs(title = "Actual Disasters",
subtitle = "Positive model coefficient (pre and post)",
y = "Actual Disasters",
x = "Year") +
theme_classic()
# comp
comp <- state_comb %>%
ggplot(aes(x = year, y = comp)) +
geom_point(col = "steelblue2") +
labs(title = "Competitiveness",
subtitle = "Positive model coefficient post, negative pre",
y = "Competitiveness",
x = "Year") +
theme_classic()
# p4
p4 <- state_comb %>%
ggplot(aes(x = year, y = p4)) +
geom_point(col = "steelblue2") +
labs(title = "4th Year in Term",
subtitle = "Positive model coefficient (pre and post)",
y = "4th year",
x = "Year") +
theme_classic()
results <- list(pred_vs_real, priv.dis,
comp, p4)
return(results)
}
# key coefficients are priv.dis, comp, p4
# function to arrange the plots I made above
ext_grid <- function(s){
graphs <- state_comp_pred(s)
grid <- ggarrange(graphs[[1]], graphs[[2]],
graphs[[3]], graphs[[4]])
return(grid)
}
ext_grid("Alabama")
ext_1
session()
version
R.Version()
